on:
  push:
    branches: ['main', 'master']
  pull_request:
    branches: ['main', 'master']

name: texor-convert
jobs:
  convert:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: setup
        uses: r-lib/actions/setup-r@v2
      - name: pandoc setup
        uses: r-lib/actions/setup-pandoc@v2
        with:
          pandoc-version: '2.19.2'
      - name: curl headers
        run: |
          sudo apt-get install -y libcurl4-openssl-dev
        shell: bash 
      - name: lib poppler
        run: |
          sudo apt-get install -y libpoppler-cpp-dev
        shell: bash
      - name: install texor
        run: |
          ## --------------------------------------------------------------------
          install.packages(c("rmarkdown", "pdftools","tinytex","xfun","logger","stringr","yaml","pak"))
          pak::pkg_install("Abhi-1U/rebib")
          pak::pkg_install("Abhi-1U/texor@sample-paper")
        shell: Rscript {0}
        working-directory: '.'
      - name: convert
        run: |
          library(texor)
          dir <- "."
          print(dir)
          dir <- xfun::normalize_path(dir)
          date <- Sys.Date()
          file_name <- texor::get_texfile_name(dir)
          log_file <- paste0("texor-log-",date,".log")
          texor::log_setup(dir, log_file, "texor" ,2)
          texor::texor_log(paste0("working directory : ", dir), "info", 2)
          file_name <- texor::get_texfile_name(dir)
          texor::texor_log(paste0("file name : ", file_name), "info", 2)
          wrapper <- get_wrapper_type(dir)
          texor::texor_log(paste0("Stage-01 | ", "including Style File to : ", wrapper), "info", 2)
          texor::texor_log(paste0("Stage-01 | ", "Style File :  Metafix.sty"), "info", 2)
          texor::include_style_file(dir)
          texor::texor_log(paste0("Stage-01 | ", "Included Style File :  Metafix.sty"), "info", 2)
          texor::texor_log(paste0("Stage-02 | ", "aggregating Bibliography using :  rebib"), "info", 2)
          texor::texor_log(paste0("Stage-02 | ", "Check rebib logs for more info"), "info", 2)
          rebib::aggregate_bibliography(dir)
          texor::log_setup(dir, log_file, "texor", 2)
          texor::texor_log(paste0("Stage-03 | ","converting Images to png"), "info", 2)
          data <- texor:::handle_figures(dir, file_name)
          texor::texor_log(paste0("Stage-03 | ","converted pdf files to png"), "info", 2)
          texor::texor_log(paste0("Stage-04 | ","Patching Code Env"), "info", 2)
          texor::patch_code_env(dir)
          texor::texor_log(paste0("Stage-04 | ","Patched Code Env"), "info", 2)
          texor::texor_log(paste0("Stage-05 | ","Patching Table Env"), "info", 2)
          texor::patch_table_env(dir)
          texor::texor_log(paste0("Stage-05 | ","Patched Table Env"), "info", 2)
          texor::patch_equations(dir)
          texor::texor_log(paste0("Stage-06 | ","Patching Figure Env"), "info", 2)
          texor::patch_figure_env(dir)
          texor::texor_log(paste0("Stage-06 | ","Patched Figure Env"), "info", 2)
          texor::texor_log(paste0("Stage-07 | ","Converting LaTeX to Markdown"), "info", 2)
          meta <- texor::pre_conversion_statistics(dir)
          texor::convert_to_markdown(dir)
          texor::texor_log(paste0("Stage-07 | ","Converted LaTeX to Markdown"), "info", 2)
          texor::texor_log(paste0("Stage-08 | ","Copying Dependencies to /web"), "info", 2)
          texor::copy_other_files(dir)
          texor::texor_log(paste0("Stage-08 | ","Copied Dependencies to /web"), "info", 2)
        shell: Rscript {0}
        working-directory: '.'
      - name: check directory
        run: |
          ls -la
          cat RJwrapper.md
        shell: bash
        working-directory: '.'
      - name: this fails
        run: |
          texor::texor_log(paste0("Stage-09 | ","Creating R-markdown File to /web"), "info", 2)
          texor::generate_rmd(dir)
          texor_log(paste0("Stage-09 | ","Created R-markdown File to /web"), "info", 2)
          texor::texor_log(paste0("Stage-10 | ","Knitting Rmd to html"), "info", 2)
          texor::produce_html(dir)
          texor::texor_log(paste0("Stage-10 | ","Knitted Rmd to html"), "info", 2)
        shell: Rscript {0}
        working-directory: '.'
      - name: zip the folder
        run: |
          ##----------------
          zip -r web.zip .
        shell: bash
        working-directory: '.'
      - name: Upload folder
        uses: actions/upload-artifact@v3
        with:
          name: web
          path: web.zip
          